# 8.Ders

## Function Overloading

Farklı parametrelerle aynı isme sahip fonksiyonlar oluşturmanıza olanak tanır. Bu, fonksiyonlar arasında parametre türü veya sayısı gibi farklar olabilir.

- **Derleme zamanında (compile-time)** çözülür. Yani, hangi fonksiyonun çağrılacağı, programın derleme aşamasında belirlenir.
- **Fonksiyonların adı aynıdır**, ancak parametre sayısı veya türleri farklıdır.
- Derleyici, fonksiyonun çağrıldığı yere göre uygun fonksiyonu seçer.

```cpp
void print(int i) 
{
    std::cout << "Integer: " << i << '\n';
}

void print(double d) 
{
    std::cout << "Double: " << d << '\n';
}

void print(std::string s) 
{
    std::cout << "String: " << s << '\n';
}

int main() 
{
    print(10);      // Integer: 10
    print(3.14);    // Double: 3.14
    print("Hello"); // String: Hello
    return 0;
}
```

- ```print(int)```, ```print(double)``` ve ```print(string)``` fonksiyonları aynı isme sahip olmasına rağmen, parametre türlerine göre yüklenmiştir.
- Derleyici, **çağrı sırasında** hangi fonksiyonun çağrılacağını parametre türüne göre **otomatik olarak** belirler.

### Function Overloading'in Olup Olmadığına Karar Vermek

1) **Fonksiyon isimlerinin aynı olması:** Eğer **birden fazla fonksiyon aynı isimle tanımlanmışsa**, bunlar function overloading olabilir.

2) **Farklı parametre sayısı veya türü:** Fonksiyon aşırı yükleme, genellikle parametre sayısının veya parametre türlerinin farklı olduğu durumlarda görülür. Eğer aynı isimle birden fazla fonksiyon varsa ve her bir fonksiyonun **parametre sayısı** veya **parametre türleri** farklıysa, bu **function overloading** anlamına gelir.

```cpp
int add(int, int);

int add(double, double);

int add(int, int, int);
```

3) **Geri dönüş türü(Return type) farklılığı:** Function overloading **geri dönüş türüyle** yapılmaz. Yani, sadece geri dönüş türü farklı olan fonksiyonlar aşırı yüklenmiş sayılmaz. Fonksiyonların parametre sayısı ya da türlerinin farklı olması gerekir.

```cpp
int add(int, int);       // int türünde dönen bir fonksiyon
double add(int, int);    // double türünde dönen başka bir fonksiyon (bu aşırı yüklenmiş olmaz, sadece dönüş türü farklı olduğu için)
```

### Kaldığım yer: Dakika 40